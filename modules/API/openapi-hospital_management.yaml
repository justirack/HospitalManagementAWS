openapi: 3.0.1
info:
  title: ${title}
  description: ${description}
  version: ${version}
servers:
  - url: ${invoke_url}
paths:
  ${add_user_path}:
    post:
      description: ${add_user_description}
      responses:
        "200":
          description: "The user was successfully added to the table."
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: POST
        uri: ${user_validation_lambda_invoke_arn}
        credentials: ${user_validation_lambda_invoke_role_arn}
  ${retrieve_user_path}:
    get:
      description: ${retrieve_user_description}
      responses:
        '200':
          description: "The user was retrieved."
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: POST
        uri: ${user_validation_lambda_invoke_arn}
        credentials: ${user_validation_lambda_invoke_role_arn}
  ${update_user_path}:
    put:
      description: ${update_user_description}
      responses:
        "200":
          description: "The user was successfully updated to the table."
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: POST
        uri: ${user_validation_lambda_invoke_arn}
        credentials: ${user_validation_lambda_invoke_role_arn}
  ${delete_user_path}:
    delete:
      description: ${delete_user_description}
      responses:
        "200":
          description: "The user was successfully updated to the table."
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: POST
        uri: ${user_validation_lambda_invoke_arn}
        credentials: ${user_validation_lambda_invoke_role_arn}
  ${book_appointment_path}:
    post:
      description: ${book_appointment_description}
      responses:
        "200":
          description: "The appointment was successfully booked"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: POST
        uri: ${appointment_validation_lambda_invoke_arn}
        credentials: ${appointment_validation_lambda_invoke_role_arn}
  ${retrieve_appointment_path}:
    get:
      description: ${retrieve_appointment_description}
      responses:
        '200':
          description: "the Appointments were successfully retrieved"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: POST
        uri: ${appointment_validation_lambda_invoke_arn}
        credentials: ${appointment_validation_lambda_invoke_role_arn}
  ${update_appointment_path}:
    put:
      description: ${update_appointment_description}
      responses:
        "200":
          description: "The appointment was successfully updated"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: POST
        uri: ${appointment_validation_lambda_invoke_arn}
        credentials: ${appointment_validation_lambda_invoke_role_arn}
  ${cancel_appointment_path}:
    delete:
      description: ${cancel_appointment_description}
      responses:
        "200":
          description: "The appointment was successfully deleted"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: POST
        uri: ${appointment_validation_lambda_invoke_arn}
        credentials: ${appointment_validation_lambda_invoke_role_arn}

